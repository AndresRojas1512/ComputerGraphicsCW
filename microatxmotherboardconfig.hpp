#ifndef MICROATXMOTHERBOARDCONFIG_H
#define MICROATXMOTHERBOARDCONFIG_H

#include <vector>
#include <map>
#include "mathelems.hpp"
#include "config.hpp"
#include "componentprimitives.hpp"
#include "basemotherboardconfig.hpp"

class MicroATXMotherboardConfig : public BaseMotherboardConfig
{
public:

    enum class RAMSlot
    {
        A1,
        A2,
        B1,
        B2
    };

    enum class GPUSlot
    {
        A1,
        A2,
    };

    MicroATXMotherboardConfig(const Dot3D &startOfPlate_, const Dot3D &endOfPlate_)
        : BaseMotherboardConfig(startOfPlate_, endOfPlate_),
        HDMI1_DP({
                 // HDMI
                 ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_HDMI1_DP_OFFSET_Y, BASE_Z + ATX_HDMI_DP_LEFTWALL_DEPTH, ATX_HDMI_DP_LEFTWALL_WIDTH, ATX_HDMI_DP_LEFTWALL_HEIGHT, ATX_HDMI_DP_LEFTWALL_DEPTH),
                 ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_HDMI1_DP_OFFSET_Y + WALL_DEPTH, BASE_Z + ATX_HDMI_DP_BOTTOM_DEPTH, ATX_HDMI_DP_BOTTOM_WIDTH, ATX_HDMI_DP_BOTTOM_HEIGHT, ATX_HDMI_DP_BOTTOM_DEPTH),
                 ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_HDMI1_DP_OFFSET_Y + WALL_DEPTH + ATX_HDMI_DP_BOTTOM_HEIGHT, BASE_Z + ATX_HDMI_DP_RIGHTWALL_DEPTH, ATX_HDMI_DP_RIGHTWALL_WIDTH, ATX_HDMI_DP_RIGHTWALL_HEIGHT, ATX_HDMI_DP_RIGHTWALL_DEPTH),
                 ParallelepipedConfig(startOfPlate_.getXCoordinate() + ATX_HDMI_DP_LEFTWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_HDMI1_DP_OFFSET_Y, BASE_Z + ATX_HDMI_DP_BACKWALL_DEPTH, ATX_HDMI_DP_BACKWALL_WIDTH, ATX_HDMI_DP_BACKWALL_HEIGHT, ATX_HDMI_DP_BACKWALL_DEPTH),
                 ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_HDMI1_DP_OFFSET_Y, BASE_Z + ATX_HDMI_DP_BACKWALL_DEPTH + ATX_HDMI_DP_TOP_DEPTH, ATX_HDMI_DP_TOP_WIDTH, ATX_HDMI_DP_TOP_HEIGHT, ATX_HDMI_DP_TOP_DEPTH),
                 // DP
                 ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_HDMI1_DP_OFFSET_Y, BASE_Z + (2 * ATX_HDMI_DP_LEFTWALL_DEPTH), ATX_HDMI_DP_LEFTWALL_WIDTH, ATX_HDMI_DP_LEFTWALL_HEIGHT, ATX_HDMI_DP_LEFTWALL_DEPTH),
                 ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_HDMI1_DP_OFFSET_Y + WALL_DEPTH, BASE_Z + (2 * ATX_HDMI_DP_BOTTOM_DEPTH) + ATX_HDMI_DP_LEFTWALL_DEPTH, ATX_HDMI_DP_BOTTOM_WIDTH, ATX_HDMI_DP_BOTTOM_HEIGHT, ATX_HDMI_DP_BOTTOM_DEPTH),
                 ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_HDMI1_DP_OFFSET_Y + WALL_DEPTH + ATX_HDMI_DP_BOTTOM_HEIGHT, BASE_Z + (2 * ATX_HDMI_DP_RIGHTWALL_DEPTH), ATX_HDMI_DP_RIGHTWALL_WIDTH, ATX_HDMI_DP_RIGHTWALL_HEIGHT, ATX_HDMI_DP_RIGHTWALL_DEPTH),
                 ParallelepipedConfig(startOfPlate_.getXCoordinate() + ATX_HDMI_DP_LEFTWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_HDMI1_DP_OFFSET_Y, BASE_Z + (2 * ATX_HDMI_DP_BACKWALL_DEPTH), ATX_HDMI_DP_BACKWALL_WIDTH, ATX_HDMI_DP_BACKWALL_HEIGHT, ATX_HDMI_DP_BACKWALL_DEPTH),
                 ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_HDMI1_DP_OFFSET_Y, BASE_Z + (2 * (ATX_HDMI_DP_BACKWALL_DEPTH + ATX_HDMI_DP_TOP_DEPTH)), ATX_HDMI_DP_TOP_WIDTH, ATX_HDMI_DP_TOP_HEIGHT, ATX_HDMI_DP_TOP_DEPTH)},
                {}, {}),
        // peripheria
        HDMI2({
                  // HDMI
                 ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_HDMI2_OFFSET_Y, BASE_Z + ATX_HDMI_DP_LEFTWALL_DEPTH, ATX_HDMI_DP_LEFTWALL_WIDTH, ATX_HDMI_DP_LEFTWALL_HEIGHT, ATX_HDMI_DP_LEFTWALL_DEPTH),
                 ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_HDMI2_OFFSET_Y + WALL_DEPTH, BASE_Z + ATX_HDMI_DP_BOTTOM_DEPTH, ATX_HDMI_DP_BOTTOM_WIDTH, ATX_HDMI_DP_BOTTOM_HEIGHT, ATX_HDMI_DP_BOTTOM_DEPTH),
                 ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_HDMI2_OFFSET_Y + WALL_DEPTH + ATX_HDMI_DP_BOTTOM_HEIGHT, BASE_Z + ATX_HDMI_DP_RIGHTWALL_DEPTH, ATX_HDMI_DP_RIGHTWALL_WIDTH, ATX_HDMI_DP_RIGHTWALL_HEIGHT, ATX_HDMI_DP_RIGHTWALL_DEPTH),
                 ParallelepipedConfig(startOfPlate_.getXCoordinate() + ATX_HDMI_DP_LEFTWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_HDMI2_OFFSET_Y, BASE_Z + ATX_HDMI_DP_BACKWALL_DEPTH, ATX_HDMI_DP_BACKWALL_WIDTH, ATX_HDMI_DP_BACKWALL_HEIGHT, ATX_HDMI_DP_BACKWALL_DEPTH),
                 ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_HDMI2_OFFSET_Y, BASE_Z + ATX_HDMI_DP_BACKWALL_DEPTH + ATX_HDMI_DP_TOP_DEPTH, ATX_HDMI_DP_TOP_WIDTH, ATX_HDMI_DP_TOP_HEIGHT, ATX_HDMI_DP_TOP_DEPTH)},
                {}, {}),
        // peripheria
        KBMS_USB_E32({
                      ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_KBMS_USB_E34_OFFSET_Y, BASE_Z + ATX_U32G2_LEFTWALL_DEPTH, ATX_U32G2_LEFTWALL_WIDTH, ATX_U32G2_LEFTWALL_HEIGHT, ATX_U32G2_LEFTWALL_DEPTH),
                      ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_KBMS_USB_E34_OFFSET_Y + ATX_U32G2_LEFTWALL_HEIGHT, BASE_Z + ATX_U32G2_BOTTOM_DEPTH, ATX_U32G2_BOTTOM_WIDTH, ATX_U32G2_BOTTOM_HEIGHT, ATX_U32G2_BOTTOM_DEPTH),
                      ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_KBMS_USB_E34_OFFSET_Y + ATX_U32G2_LEFTWALL_HEIGHT + ATX_U32G2_BOTTOM_HEIGHT, BASE_Z + ATX_U32G2_RIGHTWALL_DEPTH, ATX_U32G2_RIGHTWALL_WIDTH, ATX_U32G2_RIGHTWALL_HEIGHT, ATX_U32G2_RIGHTWALL_DEPTH),
                      ParallelepipedConfig(startOfPlate_.getXCoordinate() + ATX_U32G2_LEFTWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_KBMS_USB_E34_OFFSET_Y, BASE_Z + ATX_U32G2_BACKWALL_DEPTH, ATX_U32G2_BACKWALL_WIDTH, ATX_U32G2_BACKWALL_HEIGHT, ATX_U32G2_BACKWALL_DEPTH),
                      ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_KBMS_USB_E34_OFFSET_Y, BASE_Z + ATX_U32G2_BACKWALL_DEPTH + ATX_U32G2_TOP_DEPTH, ATX_U32G2_TOP_WIDTH, ATX_U32G2_TOP_HEIGHT, ATX_U32G2_TOP_DEPTH),
                       // U32G2_2
                      ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_KBMS_USB_E34_OFFSET_Y, BASE_Z + (2 * ATX_U32G2_LEFTWALL_DEPTH), ATX_U32G2_LEFTWALL_WIDTH, ATX_U32G2_LEFTWALL_HEIGHT, ATX_U32G2_LEFTWALL_DEPTH),
                      ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_KBMS_USB_E34_OFFSET_Y + ATX_U32G2_LEFTWALL_HEIGHT, BASE_Z + (2 * ATX_U32G2_BOTTOM_DEPTH) + ATX_U32G2_LEFTWALL_DEPTH, ATX_U32G2_BOTTOM_WIDTH, ATX_U32G2_BOTTOM_HEIGHT, ATX_U32G2_BOTTOM_DEPTH),
                      ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_KBMS_USB_E34_OFFSET_Y + ATX_U32G2_LEFTWALL_HEIGHT + ATX_U32G2_BOTTOM_HEIGHT, BASE_Z + (2 * ATX_U32G2_RIGHTWALL_DEPTH), ATX_U32G2_RIGHTWALL_WIDTH, ATX_U32G2_RIGHTWALL_HEIGHT, ATX_U32G2_RIGHTWALL_DEPTH),
                      ParallelepipedConfig(startOfPlate_.getXCoordinate() + ATX_U32G2_LEFTWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_KBMS_USB_E34_OFFSET_Y, BASE_Z + (2 * ATX_U32G2_BACKWALL_DEPTH), ATX_U32G2_BACKWALL_WIDTH, ATX_U32G2_BACKWALL_HEIGHT, ATX_U32G2_BACKWALL_DEPTH),
                      ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_KBMS_USB_E34_OFFSET_Y, BASE_Z + (2 * ATX_U32G2_BACKWALL_DEPTH) + ATX_U32G2_TOP_DEPTH, ATX_U32G2_TOP_WIDTH, ATX_U32G2_TOP_HEIGHT, ATX_U32G2_TOP_DEPTH),
                       // LAN
                      ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_KBMS_USB_E34_OFFSET_Y, BASE_Z + (2 * ATX_U32G2_LEFTWALL_DEPTH) + ATX_LAN_LEFTWALL_DEPTH, ATX_U32G2_LEFTWALL_WIDTH, ATX_U32G2_LEFTWALL_HEIGHT, ATX_LAN_LEFTWALL_DEPTH),
                      ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_KBMS_USB_E34_OFFSET_Y + ATX_U32G2_LEFTWALL_HEIGHT, BASE_Z + (2 * ATX_U32G2_BOTTOM_DEPTH) + (2 * ATX_U32G2_LEFTWALL_DEPTH), ATX_U32G2_BOTTOM_WIDTH, ATX_U32G2_BOTTOM_HEIGHT, ATX_U32G2_BOTTOM_DEPTH),
                      ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_KBMS_USB_E34_OFFSET_Y + ATX_U32G2_LEFTWALL_HEIGHT + ATX_U32G2_BOTTOM_HEIGHT, BASE_Z + (2 * ATX_U32G2_RIGHTWALL_DEPTH) + ATX_LAN_RIGHTWALL_DEPTH, ATX_U32G2_RIGHTWALL_WIDTH, ATX_U32G2_RIGHTWALL_HEIGHT, ATX_LAN_RIGHTWALL_DEPTH),
                      ParallelepipedConfig(startOfPlate_.getXCoordinate() + ATX_U32G2_LEFTWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_KBMS_USB_E34_OFFSET_Y, BASE_Z + (2 * ATX_U32G2_BACKWALL_DEPTH) + ATX_LAN_BACKWALL_DEPTH, ATX_U32G2_BACKWALL_WIDTH, ATX_U32G2_BACKWALL_HEIGHT, ATX_LAN_BACKWALL_DEPTH),
                      ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_KBMS_USB_E34_OFFSET_Y, BASE_Z + (2 * ATX_U32G2_BACKWALL_DEPTH) + ATX_LAN_BACKWALL_DEPTH + ATX_U32G2_TOP_DEPTH, ATX_U32G2_TOP_WIDTH, ATX_U32G2_TOP_HEIGHT, ATX_U32G2_TOP_DEPTH)},
                     {}, {}),
        // peripheria
        U32G2_C2({
                   // U32G2_C2_1
                   ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_U32G2_C2_OFFSET_Y, BASE_Z + ATX_U32G2_LEFTWALL_DEPTH, ATX_U32G2_LEFTWALL_WIDTH, ATX_U32G2_LEFTWALL_HEIGHT, ATX_U32G2_LEFTWALL_DEPTH),
                   ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_U32G2_C2_OFFSET_Y + ATX_U32G2_LEFTWALL_HEIGHT, BASE_Z + ATX_U32G2_BOTTOM_DEPTH, ATX_U32G2_BOTTOM_WIDTH, ATX_U32G2_BOTTOM_HEIGHT, ATX_U32G2_BOTTOM_DEPTH),
                   ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_U32G2_C2_OFFSET_Y + ATX_U32G2_LEFTWALL_HEIGHT + ATX_U32G2_BOTTOM_HEIGHT, BASE_Z + ATX_U32G2_RIGHTWALL_DEPTH, ATX_U32G2_RIGHTWALL_WIDTH, ATX_U32G2_RIGHTWALL_HEIGHT, ATX_U32G2_RIGHTWALL_DEPTH),
                   ParallelepipedConfig(startOfPlate_.getXCoordinate() + ATX_U32G2_LEFTWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_U32G2_C2_OFFSET_Y, BASE_Z + ATX_U32G2_BACKWALL_DEPTH, ATX_U32G2_BACKWALL_WIDTH, ATX_U32G2_BACKWALL_HEIGHT, ATX_U32G2_BACKWALL_DEPTH),
                   ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_U32G2_C2_OFFSET_Y, BASE_Z + ATX_U32G2_BACKWALL_DEPTH + ATX_U32G2_TOP_DEPTH, ATX_U32G2_TOP_WIDTH, ATX_U32G2_TOP_HEIGHT, ATX_U32G2_TOP_DEPTH),
                   // U32G2_C2_2
                   ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_U32G2_C2_OFFSET_Y, BASE_Z + (2 * ATX_U32G2_LEFTWALL_DEPTH), ATX_U32G2_LEFTWALL_WIDTH, ATX_U32G2_LEFTWALL_HEIGHT, ATX_U32G2_LEFTWALL_DEPTH),
                   ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_U32G2_C2_OFFSET_Y + ATX_U32G2_LEFTWALL_HEIGHT, BASE_Z + (2 * ATX_U32G2_BOTTOM_DEPTH) + ATX_U32G2_LEFTWALL_DEPTH, ATX_U32G2_BOTTOM_WIDTH, ATX_U32G2_BOTTOM_HEIGHT, ATX_U32G2_BOTTOM_DEPTH),
                   ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_U32G2_C2_OFFSET_Y + ATX_U32G2_LEFTWALL_HEIGHT + ATX_U32G2_BOTTOM_HEIGHT, BASE_Z + (2 * ATX_U32G2_RIGHTWALL_DEPTH), ATX_U32G2_RIGHTWALL_WIDTH, ATX_U32G2_RIGHTWALL_HEIGHT, ATX_U32G2_RIGHTWALL_DEPTH),
                   ParallelepipedConfig(startOfPlate_.getXCoordinate() + ATX_U32G2_LEFTWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_U32G2_C2_OFFSET_Y, BASE_Z + (2 * ATX_U32G2_BACKWALL_DEPTH), ATX_U32G2_BACKWALL_WIDTH, ATX_U32G2_BACKWALL_HEIGHT, ATX_U32G2_BACKWALL_DEPTH),
                  ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_U32G2_C2_OFFSET_Y, BASE_Z + (2 * ATX_U32G2_BACKWALL_DEPTH) + ATX_U32G2_TOP_DEPTH, ATX_U32G2_TOP_WIDTH, ATX_U32G2_TOP_HEIGHT, ATX_U32G2_TOP_DEPTH)},
                  {}, {}),
        // peripheria
        LAN_USB_E12({
                     ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_LAN_USB_E12_OFFSET_Y, BASE_Z + ATX_U32G2_LEFTWALL_DEPTH, ATX_U32G2_LEFTWALL_WIDTH, ATX_U32G2_LEFTWALL_HEIGHT, ATX_U32G2_LEFTWALL_DEPTH),
                     ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_LAN_USB_E12_OFFSET_Y + ATX_U32G2_LEFTWALL_HEIGHT, BASE_Z + ATX_U32G2_BOTTOM_DEPTH, ATX_U32G2_BOTTOM_WIDTH, ATX_U32G2_BOTTOM_HEIGHT, ATX_U32G2_BOTTOM_DEPTH),
                     ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_LAN_USB_E12_OFFSET_Y + ATX_U32G2_LEFTWALL_HEIGHT + ATX_U32G2_BOTTOM_HEIGHT, BASE_Z + ATX_U32G2_RIGHTWALL_DEPTH, ATX_U32G2_RIGHTWALL_WIDTH, ATX_U32G2_RIGHTWALL_HEIGHT, ATX_U32G2_RIGHTWALL_DEPTH),
                     ParallelepipedConfig(startOfPlate_.getXCoordinate() + ATX_U32G2_LEFTWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_LAN_USB_E12_OFFSET_Y, BASE_Z + ATX_U32G2_BACKWALL_DEPTH, ATX_U32G2_BACKWALL_WIDTH, ATX_U32G2_BACKWALL_HEIGHT, ATX_U32G2_BACKWALL_DEPTH),
                     ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_LAN_USB_E12_OFFSET_Y, BASE_Z + ATX_U32G2_BACKWALL_DEPTH + ATX_U32G2_TOP_DEPTH, ATX_U32G2_TOP_WIDTH, ATX_U32G2_TOP_HEIGHT, ATX_U32G2_TOP_DEPTH),
                       // U32G2_2
                     ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_LAN_USB_E12_OFFSET_Y, BASE_Z + (2 * ATX_U32G2_LEFTWALL_DEPTH), ATX_U32G2_LEFTWALL_WIDTH, ATX_U32G2_LEFTWALL_HEIGHT, ATX_U32G2_LEFTWALL_DEPTH),
                     ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_LAN_USB_E12_OFFSET_Y + ATX_U32G2_LEFTWALL_HEIGHT, BASE_Z + (2 * ATX_U32G2_BOTTOM_DEPTH) + ATX_U32G2_LEFTWALL_DEPTH, ATX_U32G2_BOTTOM_WIDTH, ATX_U32G2_BOTTOM_HEIGHT, ATX_U32G2_BOTTOM_DEPTH),
                     ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_LAN_USB_E12_OFFSET_Y + ATX_U32G2_LEFTWALL_HEIGHT + ATX_U32G2_BOTTOM_HEIGHT, BASE_Z + (2 * ATX_U32G2_RIGHTWALL_DEPTH), ATX_U32G2_RIGHTWALL_WIDTH, ATX_U32G2_RIGHTWALL_HEIGHT, ATX_U32G2_RIGHTWALL_DEPTH),
                     ParallelepipedConfig(startOfPlate_.getXCoordinate() + ATX_U32G2_LEFTWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_LAN_USB_E12_OFFSET_Y, BASE_Z + (2 * ATX_U32G2_BACKWALL_DEPTH), ATX_U32G2_BACKWALL_WIDTH, ATX_U32G2_BACKWALL_HEIGHT, ATX_U32G2_BACKWALL_DEPTH),
                     ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_LAN_USB_E12_OFFSET_Y, BASE_Z + (2 * ATX_U32G2_BACKWALL_DEPTH) + ATX_U32G2_TOP_DEPTH, ATX_U32G2_TOP_WIDTH, ATX_U32G2_TOP_HEIGHT, ATX_U32G2_TOP_DEPTH),
                       // LAN
                     ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_LAN_USB_E12_OFFSET_Y, BASE_Z + (2 * ATX_U32G2_LEFTWALL_DEPTH) + ATX_LAN_LEFTWALL_DEPTH, ATX_U32G2_LEFTWALL_WIDTH, ATX_U32G2_LEFTWALL_HEIGHT, ATX_LAN_LEFTWALL_DEPTH),
                     ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_LAN_USB_E12_OFFSET_Y + ATX_U32G2_LEFTWALL_HEIGHT, BASE_Z + (2 * ATX_U32G2_BOTTOM_DEPTH) + (2 * ATX_U32G2_LEFTWALL_DEPTH), ATX_U32G2_BOTTOM_WIDTH, ATX_U32G2_BOTTOM_HEIGHT, ATX_U32G2_BOTTOM_DEPTH),
                     ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_LAN_USB_E12_OFFSET_Y + ATX_U32G2_LEFTWALL_HEIGHT + ATX_U32G2_BOTTOM_HEIGHT, BASE_Z + (2 * ATX_U32G2_RIGHTWALL_DEPTH) + ATX_LAN_RIGHTWALL_DEPTH, ATX_U32G2_RIGHTWALL_WIDTH, ATX_U32G2_RIGHTWALL_HEIGHT, ATX_LAN_RIGHTWALL_DEPTH),
                     ParallelepipedConfig(startOfPlate_.getXCoordinate() + ATX_U32G2_LEFTWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_LAN_USB_E12_OFFSET_Y, BASE_Z + (2 * ATX_U32G2_BACKWALL_DEPTH) + ATX_LAN_BACKWALL_DEPTH, ATX_U32G2_BACKWALL_WIDTH, ATX_U32G2_BACKWALL_HEIGHT, ATX_LAN_BACKWALL_DEPTH),
                     ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_LAN_USB_E12_OFFSET_Y, BASE_Z + (2 * ATX_U32G2_BACKWALL_DEPTH) + ATX_LAN_BACKWALL_DEPTH + ATX_U32G2_TOP_DEPTH, ATX_U32G2_TOP_WIDTH, ATX_U32G2_TOP_HEIGHT, ATX_U32G2_TOP_DEPTH)},
                    {}, {}),
        // peripheria
        AUDIO({
               // AUDIO_1
               ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_AUDIO_OFFSET_Y, BASE_Z + ATX_AUDIO_LEFTWALL_DEPTH, ATX_AUDIO_LEFTWALL_WIDTH, ATX_AUDIO_LEFTWALL_HEIGHT, ATX_AUDIO_LEFTWALL_DEPTH),
               ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_AUDIO_OFFSET_Y + WALL_DEPTH, BASE_Z + ATX_AUDIO_BOTTOM_DEPTH, ATX_AUDIO_BOTTOM_WIDTH, ATX_AUDIO_BOTTOM_HEIGHT, ATX_AUDIO_BOTTOM_DEPTH),
               ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_AUDIO_OFFSET_Y + WALL_DEPTH + ATX_AUDIO_BOTTOM_HEIGHT, BASE_Z + ATX_AUDIO_RIGHTWALL_DEPTH, ATX_AUDIO_RIGHTWALL_WIDTH, ATX_AUDIO_RIGHTWALL_HEIGHT, ATX_AUDIO_RIGHTWALL_DEPTH),
               ParallelepipedConfig(startOfPlate_.getXCoordinate() + ATX_AUDIO_LEFTWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_AUDIO_OFFSET_Y, BASE_Z + ATX_AUDIO_BACKWALL_DEPTH, ATX_AUDIO_BACKWALL_WIDTH, ATX_AUDIO_BACKWALL_HEIGHT, ATX_AUDIO_BACKWALL_DEPTH),
               ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_AUDIO_OFFSET_Y, BASE_Z + ATX_AUDIO_BACKWALL_DEPTH + ATX_AUDIO_TOP_DEPTH, ATX_AUDIO_TOP_WIDTH, ATX_AUDIO_TOP_HEIGHT, ATX_AUDIO_TOP_DEPTH),
               // AUDIO 3
               ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_AUDIO_OFFSET_Y, BASE_Z + (2 * ATX_AUDIO_LEFTWALL_DEPTH), ATX_AUDIO_LEFTWALL_WIDTH, ATX_AUDIO_LEFTWALL_HEIGHT, ATX_AUDIO_LEFTWALL_DEPTH),
               ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_AUDIO_OFFSET_Y + WALL_DEPTH, BASE_Z + ATX_AUDIO_LEFTWALL_DEPTH + (2 * ATX_AUDIO_BOTTOM_DEPTH), ATX_AUDIO_BOTTOM_WIDTH, ATX_AUDIO_BOTTOM_HEIGHT, ATX_AUDIO_BOTTOM_DEPTH),
               ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_AUDIO_OFFSET_Y + WALL_DEPTH + ATX_AUDIO_BOTTOM_HEIGHT, BASE_Z + (2 * ATX_AUDIO_RIGHTWALL_DEPTH), ATX_AUDIO_RIGHTWALL_WIDTH, ATX_AUDIO_RIGHTWALL_HEIGHT, ATX_AUDIO_RIGHTWALL_DEPTH),
               ParallelepipedConfig(startOfPlate_.getXCoordinate() + ATX_AUDIO_LEFTWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_AUDIO_OFFSET_Y, BASE_Z + (2 * ATX_AUDIO_BACKWALL_DEPTH), ATX_AUDIO_BACKWALL_WIDTH, ATX_AUDIO_BACKWALL_HEIGHT, ATX_AUDIO_BACKWALL_DEPTH),
               ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_AUDIO_OFFSET_Y, BASE_Z + (2 * ATX_AUDIO_BACKWALL_DEPTH) + ATX_AUDIO_TOP_DEPTH, ATX_AUDIO_TOP_WIDTH, ATX_AUDIO_TOP_HEIGHT, ATX_AUDIO_TOP_DEPTH),
               // AUDIO 5
               ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_AUDIO_OFFSET_Y, BASE_Z + (3 * ATX_AUDIO_LEFTWALL_DEPTH), ATX_AUDIO_LEFTWALL_WIDTH, ATX_AUDIO_LEFTWALL_HEIGHT, ATX_AUDIO_LEFTWALL_DEPTH),
               ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_AUDIO_OFFSET_Y + WALL_DEPTH, BASE_Z + (2 * ATX_AUDIO_LEFTWALL_DEPTH) + (2 * ATX_AUDIO_BOTTOM_DEPTH), ATX_AUDIO_BOTTOM_WIDTH, ATX_AUDIO_BOTTOM_HEIGHT, ATX_AUDIO_BOTTOM_DEPTH),
               ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_AUDIO_OFFSET_Y + WALL_DEPTH + ATX_AUDIO_BOTTOM_HEIGHT, BASE_Z + (3 * ATX_AUDIO_RIGHTWALL_DEPTH), ATX_AUDIO_RIGHTWALL_WIDTH, ATX_AUDIO_RIGHTWALL_HEIGHT, ATX_AUDIO_RIGHTWALL_DEPTH),
               ParallelepipedConfig(startOfPlate_.getXCoordinate() + ATX_AUDIO_LEFTWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_AUDIO_OFFSET_Y, BASE_Z + (3 * ATX_AUDIO_BACKWALL_DEPTH), ATX_AUDIO_BACKWALL_WIDTH, ATX_AUDIO_BACKWALL_HEIGHT, ATX_AUDIO_BACKWALL_DEPTH),
               ParallelepipedConfig(startOfPlate_.getXCoordinate(), startOfPlate_.getYCoordinate() + MICROATX_AUDIO_OFFSET_Y, BASE_Z + (3 * ATX_AUDIO_BACKWALL_DEPTH) + ATX_AUDIO_TOP_DEPTH, ATX_AUDIO_TOP_WIDTH, ATX_AUDIO_TOP_HEIGHT, ATX_AUDIO_TOP_DEPTH)},
              {}, {}),
        // CPU
        LGA1200({ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_LGA1200_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_LGA1200_OFFSET_Y, BASE_Z + MICROATX_LGA1200_BASE_DEPTH, MICROATX_LGA1200_BASE_WIDTH, MICROATX_LGA1200_BASE_HEIGHT, MICROATX_LGA1200_BASE_DEPTH)}, {FrameConfig(startOfPlate_.getXCoordinate() + MICROATX_LGA1200_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_LGA1200_OFFSET_Y, BASE_Z + MICROATX_LGA1200_FRAME_DEPTH + MICROATX_LGA1200_BASE_DEPTH, MICROATX_LGA1200_FRAME_WIDTH, MICROATX_LGA1200_FRAME_HEIGHT, MICROATX_LGA1200_FRAME_DEPTH, MICROATX_LGA1200_TOPFRAME_WIDTH, MICROATX_LGA1200_BOTTOMFRAME_WIDTH, MICROATX_LGA1200_LEFTFRAME_WIDTH, MICROATX_LGA1200_RIGHTFRAME_WIDTH)}, {}),
        // RAM
        DDR4_DIMM_A1({}, {FrameConfig(startOfPlate_.getXCoordinate() + MICROATX_DDR4_DIMM_A1_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_DDR4_DIMM_A1_OFFSET_Y, BASE_Z + 40, MICROATX_DDR4_DIMM_WIDTH, MICROATX_DDR4_DIMM_HEIGHT, 40, MICROATX_DDR4_DIMM_TOPFRAMEWIDTH, MICROATX_DDR4_DIMM_BOTTOMFRAMEWIDTH, MICROATX_DDR4_DIMM_LEFTFRAMEWIDTH, MICROATX_DDR4_DIMM_RIGHTFRAMEWIDTH)}, {}),
        DDR4_DIMM_A2({}, {FrameConfig(startOfPlate_.getXCoordinate() + MICROATX_DDR4_DIMM_A2_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_DDR4_DIMM_A2_OFFSET_Y, BASE_Z + 40, MICROATX_DDR4_DIMM_WIDTH, MICROATX_DDR4_DIMM_HEIGHT, 40, MICROATX_DDR4_DIMM_TOPFRAMEWIDTH, MICROATX_DDR4_DIMM_BOTTOMFRAMEWIDTH, MICROATX_DDR4_DIMM_LEFTFRAMEWIDTH, MICROATX_DDR4_DIMM_RIGHTFRAMEWIDTH)}, {}),
        DDR4_DIMM_B1({}, {FrameConfig(startOfPlate_.getXCoordinate() + MICROATX_DDR4_DIMM_B1_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_DDR4_DIMM_B1_OFFSET_Y, BASE_Z + 40, MICROATX_DDR4_DIMM_WIDTH, MICROATX_DDR4_DIMM_HEIGHT, 40, MICROATX_DDR4_DIMM_TOPFRAMEWIDTH, MICROATX_DDR4_DIMM_BOTTOMFRAMEWIDTH, MICROATX_DDR4_DIMM_LEFTFRAMEWIDTH, MICROATX_DDR4_DIMM_RIGHTFRAMEWIDTH)}, {}),
        DDR4_DIMM_B2({}, {FrameConfig(startOfPlate_.getXCoordinate() + MICROATX_DDR4_DIMM_B2_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_DDR4_DIMM_B2_OFFSET_Y, BASE_Z + 40, MICROATX_DDR4_DIMM_WIDTH, MICROATX_DDR4_DIMM_HEIGHT, 40, MICROATX_DDR4_DIMM_TOPFRAMEWIDTH, MICROATX_DDR4_DIMM_BOTTOMFRAMEWIDTH, MICROATX_DDR4_DIMM_LEFTFRAMEWIDTH, MICROATX_DDR4_DIMM_RIGHTFRAMEWIDTH)}, {}),
        // GPU
        PCIEX16_1({}, {FrameConfig(startOfPlate_.getXCoordinate() + MICROATX_PCIEX16_1_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_PCIEX16_1_OFFSET_Y, BASE_Z + 40, MICROATX_PCIEX16_WIDTH, MICROATX_PCIEX16_HEIGHT, 40, MICROATX_PCIEX16_TOPFRAMEWIDTH, MICROATX_PCIEX16_BOTTOMFRAMEWIDTH, MICROATX_PCIEX16_LEFTFRAMEWIDTH, MICROATX_PCIEX16_RIGHTFRAMEWIDTH)}, {}),
        PCIEX16_2({}, {FrameConfig(startOfPlate_.getXCoordinate() + MICROATX_PCIEX16_2_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_PCIEX16_2_OFFSET_Y, BASE_Z + 40, MICROATX_PCIEX16_WIDTH, MICROATX_PCIEX16_HEIGHT, 40, MICROATX_PCIEX16_TOPFRAMEWIDTH, MICROATX_PCIEX16_BOTTOMFRAMEWIDTH, MICROATX_PCIEX16_LEFTFRAMEWIDTH, MICROATX_PCIEX16_RIGHTFRAMEWIDTH)}, {}),
        // capacitors
        C2242_1({}, {}, {CylinderConfig(startOfPlate_.getXCoordinate() + MICROATX_C2242_1_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_C2242_1_OFFSET_Y, BASE_Z, MICROATX_C2242_1_RADIUS, MICROATX_C2242_1_HEIGHT, MICROATX_C2242_1_SEGMENTS)}),
        C2260_1({}, {}, {CylinderConfig(startOfPlate_.getXCoordinate() + MICROATX_C2260_1_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_C2260_1_OFFSET_Y, BASE_Z, MICROATX_C2260_1_RADIUS, MICROATX_C2260_1_HEIGHT, MICROATX_C2260_1_SEGMENTS)}),
        C2280_1({}, {}, {CylinderConfig(startOfPlate_.getXCoordinate() + MICROATX_C2280_1_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_C2280_1_OFFSET_Y, BASE_Z, MICROATX_C2280_1_RADIUS, MICROATX_C2280_1_HEIGHT, MICROATX_C2280_1_SEGMENTS)}),
        C2242_2({}, {}, {CylinderConfig(startOfPlate_.getXCoordinate() + MICROATX_C2242_2_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_C2242_2_OFFSET_Y, BASE_Z, MICROATX_C2242_2_RADIUS, MICROATX_C2242_2_HEIGHT, MICROATX_C2242_2_SEGMENTS)}),
        C2260_2({}, {}, {CylinderConfig(startOfPlate_.getXCoordinate() + MICROATX_C2260_2_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_C2260_2_OFFSET_Y, BASE_Z, MICROATX_C2260_2_RADIUS, MICROATX_C2260_2_HEIGHT, MICROATX_C2260_2_SEGMENTS)}),
        C2280_2({}, {}, {CylinderConfig(startOfPlate_.getXCoordinate() + MICROATX_C2280_2_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_C2280_2_OFFSET_Y, BASE_Z, MICROATX_C2280_2_RADIUS, MICROATX_C2280_2_HEIGHT, MICROATX_C2280_2_SEGMENTS)}),
        // BATTERY
        BATTERY({}, {}, {CylinderConfig(startOfPlate_.getXCoordinate() + MICROATX_BATTERY_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_BATTERY_OFFSET_Y, BASE_Z, MICROATX_BATTERY_RADIUS, MICROATX_BATTERY_HEIGHT, MICROATX_BATTERY_SEGMENTS)}),

        SATA6G_1({ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X + ATX_SATA6G_BACKWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_Y + ATX_SATA6G_RIGHTWALL_HEIGHT, BASE_Z + ATX_SATA6G_BOTTOM_DEPTH, ATX_SATA6G_BOTTOM_WIDTH, ATX_SATA6G_BOTTOM_HEIGHT - ATX_SATA6G_RIGHTWALL_HEIGHT - ATX_SATA6G_LEFTWALL_HEIGHT, ATX_SATA6G_BOTTOM_DEPTH),
                  ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_Y, BASE_Z + ATX_SATA6G_BACKWALL_DEPTH, ATX_SATA6G_BACKWALL_WIDTH, ATX_SATA6G_BACKWALL_HEIGHT, ATX_SATA6G_BACKWALL_DEPTH),
                  ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X + ATX_SATA6G_BACKWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_Y, BASE_Z + ATX_SATA6G_RIGHTWALL_DEPTH, ATX_SATA6G_RIGHTWALL_WIDTH, ATX_SATA6G_RIGHTWALL_HEIGHT, ATX_SATA6G_RIGHTWALL_DEPTH),
                  ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X + ATX_SATA6G_BACKWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_Y - ATX_SATA6G_RIGHTWALL_HEIGHT + ATX_SATA6G_BOTTOM_HEIGHT, BASE_Z + ATX_SATA6G_LEFTWALL_DEPTH, ATX_SATA6G_LEFTWALL_WIDTH, ATX_SATA6G_LEFTWALL_HEIGHT, ATX_SATA6G_LEFTWALL_DEPTH),
                  ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_Y, BASE_Z + ATX_SATA6G_TOP_DEPTH + ATX_SATA6G_BACKWALL_DEPTH, ATX_SATA6G_TOP_WIDTH, ATX_SATA6G_TOP_HEIGHT, ATX_SATA6G_TOP_DEPTH)},
                 {}, {}),
        SATA6G_2({ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X + ATX_SATA6G_BACKWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_Y + ATX_SATA6G_RIGHTWALL_HEIGHT, BASE_Z + ATX_SATA6G_BOTTOM_DEPTH + ATX_SATA6G_BACKWALL_DEPTH + ATX_SATA6G_BOTTOM_DEPTH, ATX_SATA6G_BOTTOM_WIDTH, ATX_SATA6G_BOTTOM_HEIGHT - ATX_SATA6G_RIGHTWALL_HEIGHT - ATX_SATA6G_LEFTWALL_HEIGHT, ATX_SATA6G_BOTTOM_DEPTH),
                  ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_Y, BASE_Z + ATX_SATA6G_BACKWALL_DEPTH + ATX_SATA6G_BACKWALL_DEPTH + ATX_SATA6G_BOTTOM_DEPTH, ATX_SATA6G_BACKWALL_WIDTH, ATX_SATA6G_BACKWALL_HEIGHT, ATX_SATA6G_BACKWALL_DEPTH),
                  ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X + ATX_SATA6G_BACKWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_Y, BASE_Z + ATX_SATA6G_RIGHTWALL_DEPTH + ATX_SATA6G_BACKWALL_DEPTH + ATX_SATA6G_BOTTOM_DEPTH, ATX_SATA6G_RIGHTWALL_WIDTH, ATX_SATA6G_RIGHTWALL_HEIGHT, ATX_SATA6G_RIGHTWALL_DEPTH),
                  ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X + ATX_SATA6G_BACKWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_Y - ATX_SATA6G_RIGHTWALL_HEIGHT + ATX_SATA6G_BOTTOM_HEIGHT, BASE_Z + ATX_SATA6G_LEFTWALL_DEPTH + ATX_SATA6G_BACKWALL_DEPTH + ATX_SATA6G_BOTTOM_DEPTH, ATX_SATA6G_LEFTWALL_WIDTH, ATX_SATA6G_LEFTWALL_HEIGHT, ATX_SATA6G_LEFTWALL_DEPTH),
                  ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_Y, BASE_Z + ATX_SATA6G_TOP_DEPTH + ATX_SATA6G_BACKWALL_DEPTH + ATX_SATA6G_BACKWALL_DEPTH + ATX_SATA6G_BOTTOM_DEPTH, ATX_SATA6G_TOP_WIDTH, ATX_SATA6G_TOP_HEIGHT, ATX_SATA6G_TOP_DEPTH)},
                 {}, {}),
        SATA6G_3({ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X + ATX_SATA6G_BACKWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_3_4_BASE_OFFSET_Y + ATX_SATA6G_RIGHTWALL_HEIGHT, BASE_Z + ATX_SATA6G_BOTTOM_DEPTH, ATX_SATA6G_BOTTOM_WIDTH, ATX_SATA6G_BOTTOM_HEIGHT - ATX_SATA6G_RIGHTWALL_HEIGHT - ATX_SATA6G_LEFTWALL_HEIGHT, ATX_SATA6G_BOTTOM_DEPTH),
                  ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_3_4_BASE_OFFSET_Y, BASE_Z + ATX_SATA6G_BACKWALL_DEPTH, ATX_SATA6G_BACKWALL_WIDTH, ATX_SATA6G_BACKWALL_HEIGHT, ATX_SATA6G_BACKWALL_DEPTH),
                  ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X + ATX_SATA6G_BACKWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_3_4_BASE_OFFSET_Y, BASE_Z + ATX_SATA6G_RIGHTWALL_DEPTH, ATX_SATA6G_RIGHTWALL_WIDTH, ATX_SATA6G_RIGHTWALL_HEIGHT, ATX_SATA6G_RIGHTWALL_DEPTH),
                  ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X + ATX_SATA6G_BACKWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_3_4_BASE_OFFSET_Y - ATX_SATA6G_RIGHTWALL_HEIGHT + ATX_SATA6G_BOTTOM_HEIGHT, BASE_Z + ATX_SATA6G_LEFTWALL_DEPTH, ATX_SATA6G_LEFTWALL_WIDTH, ATX_SATA6G_LEFTWALL_HEIGHT, ATX_SATA6G_LEFTWALL_DEPTH),
                  ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_3_4_BASE_OFFSET_Y, BASE_Z + ATX_SATA6G_TOP_DEPTH + ATX_SATA6G_BACKWALL_DEPTH, ATX_SATA6G_TOP_WIDTH, ATX_SATA6G_TOP_HEIGHT, ATX_SATA6G_TOP_DEPTH)},
                 {}, {}),
        SATA6G_4({ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X + ATX_SATA6G_BACKWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_3_4_BASE_OFFSET_Y + ATX_SATA6G_RIGHTWALL_HEIGHT, BASE_Z + ATX_SATA6G_BOTTOM_DEPTH + ATX_SATA6G_BACKWALL_DEPTH + ATX_SATA6G_BOTTOM_DEPTH, ATX_SATA6G_BOTTOM_WIDTH, ATX_SATA6G_BOTTOM_HEIGHT - ATX_SATA6G_RIGHTWALL_HEIGHT - ATX_SATA6G_LEFTWALL_HEIGHT, ATX_SATA6G_BOTTOM_DEPTH),
                  ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_3_4_BASE_OFFSET_Y, BASE_Z + ATX_SATA6G_BACKWALL_DEPTH + ATX_SATA6G_BACKWALL_DEPTH + ATX_SATA6G_BOTTOM_DEPTH, ATX_SATA6G_BACKWALL_WIDTH, ATX_SATA6G_BACKWALL_HEIGHT, ATX_SATA6G_BACKWALL_DEPTH),
                  ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X + ATX_SATA6G_BACKWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_3_4_BASE_OFFSET_Y, BASE_Z + ATX_SATA6G_RIGHTWALL_DEPTH + ATX_SATA6G_BACKWALL_DEPTH + ATX_SATA6G_BOTTOM_DEPTH, ATX_SATA6G_RIGHTWALL_WIDTH, ATX_SATA6G_RIGHTWALL_HEIGHT, ATX_SATA6G_RIGHTWALL_DEPTH),
                  ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X + ATX_SATA6G_BACKWALL_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_3_4_BASE_OFFSET_Y - ATX_SATA6G_RIGHTWALL_HEIGHT + ATX_SATA6G_BOTTOM_HEIGHT, BASE_Z + ATX_SATA6G_LEFTWALL_DEPTH + ATX_SATA6G_BACKWALL_DEPTH + ATX_SATA6G_BOTTOM_DEPTH, ATX_SATA6G_LEFTWALL_WIDTH, ATX_SATA6G_LEFTWALL_HEIGHT, ATX_SATA6G_LEFTWALL_DEPTH),
                  ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SATA6G_1_2_BASE_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_SATA6G_3_4_BASE_OFFSET_Y, BASE_Z + ATX_SATA6G_TOP_DEPTH + ATX_SATA6G_BACKWALL_DEPTH + ATX_SATA6G_BACKWALL_DEPTH + ATX_SATA6G_BOTTOM_DEPTH, ATX_SATA6G_TOP_WIDTH, ATX_SATA6G_TOP_HEIGHT, ATX_SATA6G_TOP_DEPTH)},
                 {}, {}),
        ATXPWR({ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_ATXPWR_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_ATXPWR_OFFSET_Y, BASE_Z + MICROATX_ATXPWR_DEPTH, MICROATX_ATXPWR_WIDTH, MICROATX_ATXPWR_HEIGHT, MICROATX_ATXPWR_DEPTH)}, {FrameConfig(startOfPlate_.getXCoordinate() + MICROATX_ATXPWR_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_ATXPWR_OFFSET_Y, BASE_Z + MICROATX_ATXPWR_FRAME_DEPTH, MICROATX_ATXPWR_WIDTH, MICROATX_ATXPWR_HEIGHT, MICROATX_ATXPWR_FRAME_DEPTH, MICROATX_ATXPWR_FRAME_WIDTH, MICROATX_ATXPWR_FRAME_WIDTH, MICROATX_ATXPWR_FRAME_WIDTH, MICROATX_ATXPWR_FRAME_WIDTH)}, {}),
        IntelB560({ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_IntelB560_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_IntelB560_OFFSET_Y, BASE_Z + MICROATX_IntelB560_DEPTH, MICROATX_IntelB560_WIDTH, MICROATX_IntelB560_HEIGHT, MICROATX_IntelB560_DEPTH)}, {}, {}),
        SuperIO({ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_SuperIO_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_SuperIO_OFFSET_Y, BASE_Z + MICROATX_SuperIO_DEPTH, MICROATX_SuperIO_WIDTH, MICROATX_SuperIO_HEIGHT, MICROATX_SuperIO_DEPTH)}, {}, {}),
        U32G1_34({ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_U32G1_34_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_U32G1_34_OFFSET_Y, BASE_Z + MICROATX_U32G1_34_DEPTH, MICROATX_U32G1_34_WIDTH, MICROATX_U32G1_34_HEIGHT, MICROATX_U32G1_34_DEPTH)}, {FrameConfig(startOfPlate_.getXCoordinate() + MICROATX_U32G1_34_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_U32G1_34_OFFSET_Y, BASE_Z + MICROATX_U32G1_34_FRAME_DEPTH, MICROATX_U32G1_34_WIDTH, MICROATX_U32G1_34_HEIGHT, MICROATX_U32G1_34_FRAME_DEPTH, MICROATX_U32G1_34_FRAME_WIDTH, MICROATX_U32G1_34_FRAME_WIDTH, MICROATX_U32G1_34_FRAME_WIDTH, MICROATX_U32G1_34_FRAME_WIDTH)}, {}),
        U32G1_56({ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_U32G1_56_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_U32G1_56_OFFSET_Y, BASE_Z + MICROATX_U32G1_56_DEPTH, MICROATX_U32G1_56_WIDTH, MICROATX_U32G1_56_HEIGHT, MICROATX_U32G1_56_DEPTH)}, {FrameConfig(startOfPlate_.getXCoordinate() + MICROATX_U32G1_56_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_U32G1_56_OFFSET_Y, BASE_Z + MICROATX_U32G1_56_FRAME_DEPTH, MICROATX_U32G1_56_WIDTH, MICROATX_U32G1_56_HEIGHT, MICROATX_U32G1_56_FRAME_DEPTH, MICROATX_U32G1_56_FRAME_WIDTH, MICROATX_U32G1_56_FRAME_WIDTH, MICROATX_U32G1_56_FRAME_WIDTH, MICROATX_U32G1_56_FRAME_WIDTH)}, {}),
        ATX_12V({ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_ATX_12V_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_ATX_12V_OFFSET_Y, BASE_Z + MICROATX_ATX_12V_DEPTH, MICROATX_ATX_12V_WIDTH, MICROATX_ATX_12V_HEIGHT, MICROATX_ATX_12V_DEPTH)}, {FrameConfig(startOfPlate_.getXCoordinate() + MICROATX_ATX_12V_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_ATX_12V_OFFSET_Y, BASE_Z + MICROATX_ATX_12V_FRAME_DEPTH, MICROATX_ATX_12V_WIDTH, MICROATX_ATX_12V_HEIGHT, MICROATX_ATX_12V_FRAME_DEPTH, MICROATX_ATX_12V_FRAME_WIDTH, MICROATX_ATX_12V_FRAME_WIDTH, MICROATX_ATX_12V_FRAME_WIDTH, MICROATX_ATX_12V_FRAME_WIDTH)}, {}),
        M2_1({ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_M2_1_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_M2_1_OFFSET_Y, BASE_Z + MICROATX_M2_1_DEPTH, MICROATX_M2_1_WIDTH, MICROATX_M2_1_HEIGHT, MICROATX_M2_1_DEPTH)}, {FrameConfig(startOfPlate_.getXCoordinate() + MICROATX_M2_1_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_M2_1_OFFSET_Y, BASE_Z + MICROATX_M2_1_FRAME_DEPTH, MICROATX_M2_1_WIDTH, MICROATX_M2_1_HEIGHT, MICROATX_M2_1_FRAME_DEPTH, MICROATX_M2_1_FRAME_WIDTH, MICROATX_M2_1_FRAME_WIDTH, MICROATX_M2_1_FRAME_WIDTH, MICROATX_M2_1_FRAME_WIDTH)}, {}),
        LPT({ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_LPT_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_LPT_OFFSET_Y, BASE_Z + MICROATX_LPT_DEPTH, MICROATX_LPT_WIDTH, MICROATX_LPT_HEIGHT, MICROATX_LPT_DEPTH)}, {FrameConfig(startOfPlate_.getXCoordinate() + MICROATX_LPT_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_LPT_OFFSET_Y, BASE_Z + MICROATX_LPT_FRAME_DEPTH, MICROATX_LPT_WIDTH, MICROATX_LPT_HEIGHT, MICROATX_LPT_FRAME_DEPTH, MICROATX_LPT_FRAME_WIDTH, MICROATX_LPT_FRAME_WIDTH, MICROATX_LPT_FRAME_WIDTH, MICROATX_LPT_FRAME_WIDTH)}, {}),
        CHAFAN2({ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_CHAFAN2_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_CHAFAN2_OFFSET_Y, BASE_Z + MICROATX_CHAFAN2_DEPTH, MICROATX_CHAFAN2_WIDTH, MICROATX_CHAFAN2_HEIGHT, MICROATX_CHAFAN2_DEPTH)}, {FrameConfig(startOfPlate_.getXCoordinate() + MICROATX_CHAFAN2_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_CHAFAN2_OFFSET_Y, BASE_Z + MICROATX_CHAFAN2_FRAME_DEPTH, MICROATX_CHAFAN2_WIDTH, MICROATX_CHAFAN2_HEIGHT, MICROATX_CHAFAN2_FRAME_DEPTH, MICROATX_CHAFAN2_FRAME_WIDTH, MICROATX_CHAFAN2_FRAME_WIDTH, MICROATX_CHAFAN2_FRAME_WIDTH, MICROATX_CHAFAN2_FRAME_WIDTH)}, {}),
        BIOS({ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_BIOS_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_BIOS_OFFSET_Y, BASE_Z + MICROATX_BIOS_DEPTH, MICROATX_BIOS_WIDTH, MICROATX_BIOS_HEIGHT, MICROATX_BIOS_DEPTH)}, {FrameConfig(startOfPlate_.getXCoordinate() + MICROATX_BIOS_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_BIOS_OFFSET_Y, BASE_Z + MICROATX_BIOS_FRAME_DEPTH, MICROATX_BIOS_WIDTH, MICROATX_BIOS_HEIGHT, MICROATX_BIOS_FRAME_DEPTH, MICROATX_BIOS_FRAME_WIDTH, MICROATX_BIOS_FRAME_WIDTH, MICROATX_BIOS_FRAME_WIDTH, MICROATX_BIOS_FRAME_WIDTH)}, {}),
        CPUFAN({ParallelepipedConfig(startOfPlate_.getXCoordinate() + MICROATX_CPUFAN_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_CPUFAN_OFFSET_Y, BASE_Z + MICROATX_CPUFAN_DEPTH, MICROATX_CPUFAN_WIDTH, MICROATX_CPUFAN_HEIGHT, MICROATX_CPUFAN_DEPTH)}, {FrameConfig(startOfPlate_.getXCoordinate() + MICROATX_CPUFAN_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_CPUFAN_OFFSET_Y, BASE_Z + MICROATX_CPUFAN_FRAME_DEPTH, MICROATX_CPUFAN_WIDTH, MICROATX_CPUFAN_HEIGHT, MICROATX_CPUFAN_FRAME_DEPTH, MICROATX_CPUFAN_FRAME_WIDTH, MICROATX_CPUFAN_FRAME_WIDTH, MICROATX_CPUFAN_FRAME_WIDTH, MICROATX_CPUFAN_FRAME_WIDTH)}, {}),
        // RAM slots offset
        DDR4_DIMM_A1_offset(startOfPlate_.getXCoordinate() + MICROATX_DDR4_DIMM_A1_OFFSET_X + MICROATX_DDR4_DIMM_LEFTFRAMEWIDTH, startOfPlate_.getYCoordinate() + MICROATX_DDR4_DIMM_A1_OFFSET_Y + MICROATX_DDR4_DIMM_TOPFRAMEWIDTH, BASE_Z + RAM_4GB_DEPTH),
        DDR4_DIMM_A2_offset(startOfPlate_.getXCoordinate() + MICROATX_DDR4_DIMM_A2_OFFSET_X + MICROATX_DDR4_DIMM_LEFTFRAMEWIDTH, startOfPlate_.getYCoordinate() + MICROATX_DDR4_DIMM_A2_OFFSET_Y + MICROATX_DDR4_DIMM_TOPFRAMEWIDTH, BASE_Z + RAM_4GB_DEPTH),
        DDR4_DIMM_B1_offset(startOfPlate_.getXCoordinate() + MICROATX_DDR4_DIMM_B1_OFFSET_X + MICROATX_DDR4_DIMM_LEFTFRAMEWIDTH, startOfPlate_.getYCoordinate() + MICROATX_DDR4_DIMM_B1_OFFSET_Y + MICROATX_DDR4_DIMM_TOPFRAMEWIDTH, BASE_Z + RAM_4GB_DEPTH),
        DDR4_DIMM_B2_offset(startOfPlate_.getXCoordinate() + MICROATX_DDR4_DIMM_B2_OFFSET_X + MICROATX_DDR4_DIMM_LEFTFRAMEWIDTH, startOfPlate_.getYCoordinate() + MICROATX_DDR4_DIMM_B2_OFFSET_Y + MICROATX_DDR4_DIMM_TOPFRAMEWIDTH, BASE_Z + RAM_4GB_DEPTH),
        DDR4_DIMM_A1_ACC_offset(startOfPlate_.getXCoordinate() + MICROATX_DDR4_DIMM_A1_OFFSET_X + ATX_DDR4_DIMM_LEFTFRAMEWIDTH - 2, startOfPlate_.getYCoordinate() + MICROATX_DDR4_DIMM_A1_OFFSET_Y + ATX_DDR4_DIMM_TOPFRAMEWIDTH + 25, BASE_Z + RAM_4GB_DEPTH - 5),
        DDR4_DIMM_A2_ACC_offset(startOfPlate_.getXCoordinate() + MICROATX_DDR4_DIMM_A2_OFFSET_X + ATX_DDR4_DIMM_LEFTFRAMEWIDTH - 2, startOfPlate_.getYCoordinate() + MICROATX_DDR4_DIMM_A2_OFFSET_Y + ATX_DDR4_DIMM_TOPFRAMEWIDTH + 25, BASE_Z + RAM_4GB_DEPTH - 5),
        DDR4_DIMM_B1_ACC_offset(startOfPlate_.getXCoordinate() + MICROATX_DDR4_DIMM_B1_OFFSET_X + ATX_DDR4_DIMM_LEFTFRAMEWIDTH - 2, startOfPlate_.getYCoordinate() + MICROATX_DDR4_DIMM_B1_OFFSET_Y + ATX_DDR4_DIMM_TOPFRAMEWIDTH + 25, BASE_Z + RAM_4GB_DEPTH - 5),
        DDR4_DIMM_B2_ACC_offset(startOfPlate_.getXCoordinate() + MICROATX_DDR4_DIMM_B2_OFFSET_X + ATX_DDR4_DIMM_LEFTFRAMEWIDTH - 2, startOfPlate_.getYCoordinate() + MICROATX_DDR4_DIMM_B2_OFFSET_Y + ATX_DDR4_DIMM_TOPFRAMEWIDTH + 25, BASE_Z + RAM_4GB_DEPTH - 5),
        // GPU slots offset
        PCIEX16_1_offset(startOfPlate_.getXCoordinate() + MICROATX_PCIEX16_1_OFFSET_X + MICROATX_PCIEX16_LEFTFRAMEWIDTH, startOfPlate_.getYCoordinate() + MICROATX_PCIEX16_1_OFFSET_Y + MICROATX_PCIEX16_TOPFRAMEWIDTH, BASE_Z + GPU_4GB_DEPTH),
        PCIEX16_2_offset(startOfPlate_.getXCoordinate() + MICROATX_PCIEX16_2_OFFSET_X + MICROATX_PCIEX16_LEFTFRAMEWIDTH, startOfPlate_.getYCoordinate() + MICROATX_PCIEX16_2_OFFSET_Y + MICROATX_PCIEX16_TOPFRAMEWIDTH, BASE_Z + GPU_4GB_DEPTH),
        PCIEX16_1_ACC_offset(startOfPlate_.getXCoordinate() + 70, startOfPlate_.getYCoordinate() + MICROATX_PCIEX16_1_OFFSET_Y + MICROATX_PCIEX16_TOPFRAMEWIDTH, BASE_Z + GPU_4GB_DEPTH + 150),
        PCIEX16_2_ACC_offset(startOfPlate_.getXCoordinate() + 70, startOfPlate_.getYCoordinate() + MICROATX_PCIEX16_2_OFFSET_Y + MICROATX_PCIEX16_TOPFRAMEWIDTH, BASE_Z + GPU_4GB_DEPTH + 150),
        // CPU slot offset
        CPU_offset(startOfPlate_.getXCoordinate() + MICROATX_LGA1200_OFFSET_X + MICROATX_LGA1200_LEFTFRAME_WIDTH, startOfPlate_.getYCoordinate() + MICROATX_LGA1200_OFFSET_Y + MICROATX_LGA1200_TOPFRAME_WIDTH, BASE_Z + MICROATX_LGA1200_BASE_DEPTH + CPU_INTEL_DEPTH),
        CPU_ACC_offset(startOfPlate_.getXCoordinate() + MICROATX_LGA1200_OFFSET_X + MICROATX_LGA1200_LEFTFRAME_WIDTH + CPU_ACC_OFFSET_X, startOfPlate_.getYCoordinate() + MICROATX_LGA1200_OFFSET_Y + MICROATX_LGA1200_TOPFRAME_WIDTH + CPU_ACC_OFFSET_Y, BASE_Z + MICROATX_LGA1200_BASE_DEPTH + (2 * CPU_INTEL_ACC_DEPTH))
    {
        std::cout << "MicroATXMotherboardConfig::MicroATXMotherboardConfig" << std::endl;
        ramSlotsOccupied = {{static_cast<int>(RAMSlot::A1), false}, {static_cast<int>(RAMSlot::A2), false}, {static_cast<int>(RAMSlot::B1), false}, {static_cast<int>(RAMSlot::B2), false}};
        gpuSlotsOccupied = {{static_cast<int>(GPUSlot::A1), false}, {static_cast<int>(GPUSlot::A2), false}};
        cpuSlotOccupied = false;
    }

    Dot3D getRamSlotPosition(int slot) const override;
    Dot3D getRamAccSlotPosition(int slot) const override;

    Dot3D getGpuSlotPosition(int slot) const override;
    Dot3D getGPuAccSlotPosition(int slot) const override;

    Dot3D getCpuSlotPosition(void) const override;
    Dot3D getCpuAccSlotPosition(void) const override;

    // peripheria
    ComponentConfig HDMI1_DP;
    ComponentConfig HDMI2;
    ComponentConfig KBMS_USB_E32;
    ComponentConfig U32G2_C2;
    ComponentConfig LAN_USB_E12;
    ComponentConfig AUDIO;
    // processor
    ComponentConfig LGA1200;

    // RAM
    ComponentConfig DDR4_DIMM_A1;
    ComponentConfig DDR4_DIMM_A2;
    ComponentConfig DDR4_DIMM_B1;
    ComponentConfig DDR4_DIMM_B2;

    // GPU
    ComponentConfig PCIEX16_1;
    ComponentConfig PCIEX16_2;

    // capacitors
    ComponentConfig C2242_1;
    ComponentConfig C2260_1;
    ComponentConfig C2280_1;
    ComponentConfig C2242_2;
    ComponentConfig C2260_2;
    ComponentConfig C2280_2;

    // battery
    ComponentConfig BATTERY;

    // sata
    ComponentConfig SATA6G_1;
    ComponentConfig SATA6G_2;
    ComponentConfig SATA6G_3;
    ComponentConfig SATA6G_4;

    ComponentConfig ATXPWR;
    ComponentConfig IntelB560;
    ComponentConfig SuperIO;

    ComponentConfig U32G1_34;
    ComponentConfig U32G1_56;
    ComponentConfig ATX_12V;
    ComponentConfig M2_1;
    ComponentConfig LPT;
    ComponentConfig CHAFAN2;
    ComponentConfig BIOS;
    ComponentConfig CPUFAN;

    // offset for placing the RAM block in the DDR4 socket
    Dot3D DDR4_DIMM_A1_offset;
    Dot3D DDR4_DIMM_A2_offset;
    Dot3D DDR4_DIMM_B1_offset;
    Dot3D DDR4_DIMM_B2_offset;
    Dot3D DDR4_DIMM_A1_ACC_offset;
    Dot3D DDR4_DIMM_A2_ACC_offset;
    Dot3D DDR4_DIMM_B1_ACC_offset;
    Dot3D DDR4_DIMM_B2_ACC_offset;


    // offset for placing the GPU block in the PCIEX16 socket
    Dot3D PCIEX16_1_offset;
    Dot3D PCIEX16_2_offset;
    Dot3D PCIEX16_1_ACC_offset;
    Dot3D PCIEX16_2_ACC_offset;

    // offset for placing the CPU in the CPU socket
    Dot3D CPU_offset;
    Dot3D CPU_ACC_offset;

    Dot3D getStartOfPlate() const override;
    Dot3D getEndOfPlate() const override;

    bool isRamSlotAvailable(int slot) override;
    void occupyRamSlot(int slot) override;
    QList<int> getAvailableRamSlots() override;

    bool isGpuSlotAvailable(int slot) override;
    void occupyGpuSlot(int slot) override;
    QList<int> getAvailableGpuSlots() override;

    bool isCpuSlotAvailable(void) override;
};

#endif // MICROATXMOTHERBOARDCONFIG_H
